#!/bin/bash
# roughly based on this guide: https://kb.ettus.com/Building_and_Installing_the_USRP_Open-Source_Toolchain_(UHD_and_GNU_Radio)_on_Linux

# get OS to the most updated state
apt -y upgrade; apt -y update; apt -y autoremove

echo "-- Installing PKGs defined in version.yml --"
packages=$(yq '.pkgs[]' < /tmp/version.yml)
for pkg in $(echo -e "$packages"); do \
    echo "Installing: ${pkg}" && \
    DEBIAN_FRONTEND=noninteractive apt install -y $pkg; \
done
echo "---"

echo "-- PIP install defined in version.yml --"
packages=$(yq '.pip[]' < /tmp/version.yml)
for pkg in $(echo -e "$packages"); do \
    echo "Installing: ${pkg}" && \
    pip install --prefix=/usr $pkg; \
done
echo "---"

# our workspace
pushd /opt

# volk
git clone --recursive https://github.com/gnuradio/volk.git
git checkout $(yq '.volk-version' < /tmp/version.yml)
pushd volk
mkdir -p build
pushd build
cmake -DCMAKE_BUILD_TYPE=Release -DPYTHON_EXECUTABLE=/usr/bin/python3 ../
make
make test
make install
ldconfig
popd; popd


# uhd build from source, this is the driver that connects to the Ettus Research hardware
git clone https://github.com/EttusResearch/uhd
pushd uhd
git checkout $(yq '.uhd-version' < /tmp/version.yml)
pushd host; mkdir -p build; pushd build
cmake ../; make; make test; make install
ldconfig
export LD_LIBRARY_PATH=/usr/local/lib
popd; popd; popd

uhd_images_downloader

# mpir; MPIR is a fork of the GNU Multi Precision library
git clone https://github.com/wbhart/mpir.git
pushd mpir
./autogen.sh
./configure
make; make check
make install
popd

# gnuradio; the reason for all of this
git clone https://github.com/gnuradio/gnuradio.git
pushd gnuradio
git checkout $(yq '.version' < /tmp/version.yml)
if [ $(yq '.version' < /tmp/version.yml) == v3.8.2.0 ]; then
    git submodule update --init --recursive
fi
mkdir -p build; pushd build
cmake ../ -Werror
make -j$(nproc) -k
if [ $(yq '.version' < /tmp/version.yml) == v3.8.2.0 ]; then
  QT_QPA_PLATFORM=offscreen ctest --output-on-failure
else
  QT_QPA_PLATFORM=offscreen ctest --output-on-failure -E "qa_polar_..coder_(sc_)?systematic"
fi
make install
ldconfig
popd

# hackrf
git clone git clone https://git.osmocom.org/sdr/gr-osmosdr.git
pushd gr-osmosdr
git checkout v0.2.4
mkdir build; pushd build
cmake ../
make
make install
ldconfig
popd; popd

rm -rf /opt/*
